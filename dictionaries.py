# -*- coding: utf-8 -*-
"""Dictionaries.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N-RSTDyN7qkOoAHDaL7Q7Lh6nI1PYY58
"""

json={
    "name":["sn","ssn"],
    "age":[20,10],
    "role":["nothing","empty"]
}

print(json)
print(type(json))

#using dict constructor

people =dict(name="sn",age=20,role="nothing")
print(people)
print(type(people))

import pandas as pd

# Creating a dataset using a dictionary
data = {
    'Name': ['John', 'Alice', 'Bob', 'Mike'],
    'Age': [25, 30, 22, 35],
    'Role': ['Engineer', 'Doctor', 'Artist', 'Lawyer']
}

# Loading the dataset into a Pandas DataFrame
df = pd.DataFrame(data)

# Display the first few records of the DataFrame
print(df.head())


# Displaying a concise summary of the DataFrame
print(df.info())

# Displaying descriptive statistics of the DataFrame
print(df.describe())

import pandas as pd

# Creating a sample DataFrame
data = {
    'Name': ['John', 'Alice', 'Bob', 'Mike', 'Sarah'],
    'Age': [25, 30, 22, 35, 28],
    'Salary': [50000, 60000, 45000, 70000, 65000],
    'Department': ['Engineering', 'Medicine', 'Arts', 'Law', 'Engineering']
}

df = pd.DataFrame(data)

# Display the DataFrame
print("DataFrame:")
print(df)

# Indexing a single column
print("\nSingle column (Name):")
print(df['Name'])

# Slicing rows and selecting specific columns
print("\nSliced rows and columns (Rows 1 to 3, 'Name' and 'Salary'):")
print(df.loc[1:3, ['Name', 'Salary']])

# Sorting by 'Salary' in descending order
print("\nSorted by Salary (Descending):")
print(df.sort_values(by='Salary', ascending=False))

# Aggregating the 'Salary' column
print("\nAggregating Salary (mean, min, max, sum):")
print(df['Salary'].agg(['mean', 'min', 'max', 'sum']))

# Grouping by 'Department' and calculating the mean of 'Salary'
print("\nMean Salary by Department:")
print(df.groupby('Department')['Salary'].mean())